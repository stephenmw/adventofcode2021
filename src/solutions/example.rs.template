pub fn problem1(input: &str) -> String {
    //let data = parser::parse(input).unwrap().1;
    //format!("{}", ans)
    unimplemented!();
}

pub fn problem2(_input: &str) -> String {
    unimplemented!();
}

mod parser {
    use crate::lib::combinators::*;

    pub fn parse(input: &str) -> IResult<&str, ()> {
        unimplemented!();
    }
}


#[cfg(test)]
mod tests {
    use super::*;

    const EXAMPLE_INPUT: &str = "";

    #[test]
    fn problem1_test() {
        assert_eq!(problem1(EXAMPLE_INPUT), "")
    }
    #[test]
    fn problem2_test() {
        //assert_eq!(problem2(EXAMPLE_INPUT), "")
    }
}
